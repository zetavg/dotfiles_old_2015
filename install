#! /bin/bash

time_stamp=$(date +%Y%m%d_%H%M%S)

link_file() {
  source="$1"
  target="$2"
  if [[ -e "$target" ]] && [[ ! -L "$target" ]]; then
    echo "Creating backup for $target: $target.$time_stamp.bak"
    mv -f "$target" "$target.$time_stamp.bak"
  elif [[ -L "$target" ]]; then
    rm "$target"
  fi
  echo "Linking $source to $target"
  ln -sf "$source" "$target"
}


p=$(cd "$(dirname "$0")"; pwd)
cd "$p"

if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "Error: can't find git."
  exit -1
fi


# Update git submodules
echo "Updating git submodules..."

git submodule init
git submodule update


# Dotfiles
for i in _*
do
  source="$p/$i"
  target="$HOME/${i/_/.}"
  link_file "$source" "$target"
done


# Profanity
source="$p/profanity"
target="$HOME/.config/profanity"
link_file "$source" "$target"


# Sublime Text 2
source="$p/subl2"
if [[ $(uname) == "Darwin" ]]; then
  test ! -e "$HOME/Library/Application Support/Sublime Text 2/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 2/Packages"
  target="$HOME/Library/Application Support/Sublime Text 2/Packages/User"
else
  test ! -e "$HOME/.config/sublime-text-2/Packages" && mkdir -p "$HOME/.config/sublime-text-2/Packages"
  target="$HOME/.config/sublime-text-2/Packages/User"
fi
if [[ -e "$target" ]]; then
  echo "Backing up old settings for subl2 ..."
  mv -f "$target" "$target.$time_stamp.bak"
fi
echo "Restoring subl2 settings to $target"
cp -rf "$source" "$target"


# Sublime Text 3
source="$p/subl3"
if [[ $(uname) == "Darwin" ]]; then
  test ! -e "$HOME/Library/Application Support/Sublime Text 3/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 3/Packages"
  target="$HOME/Library/Application Support/Sublime Text 3/Packages/User"
else
  test ! -e "$HOME/.config/sublime-text-3/Packages" && mkdir -p "$HOME/.config/sublime-text-3/Packages"
  target="$HOME/.config/sublime-text-3/Packages/User"
fi
link_file "$source" "$target"


# Secret
if [[ -e "$p/secret" ]]; then
  echo "Chmod..."
  chmod -R o-r "$p/secret"
  chmod -R o-w "$p/secret"
  chmod -R o-x "$p/secret"
  chmod -R g-r "$p/secret"
  chmod -R g-w "$p/secret"
  chmod -R g-x "$p/secret"
  echo "Copying private profiles..."

  if [[ -e "$p/secret/subl2" ]]; then
    source="$p/secret/subl2/*"
      if [[ $(uname) == "Darwin" ]]; then
        test ! -e "$HOME/Library/Application Support/Sublime Text 2/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 2/Packages/User"
        target="$HOME/Library/Application Support/Sublime Text 2/Packages/User"
      else
        test ! -e "$HOME/.config/sublime-text-2/Packages" && mkdir -p "$HOME/.config/sublime-text-2/Packages/User"
        target="$HOME/.config/sublime-text-2/Packages/User"
      fi
      cp -f $source "$target/"
  fi

  if [[ -e "$p/secret/subl3" ]]; then
    source="$p/secret/subl3/*"
      if [[ $(uname) == "Darwin" ]]; then
        test ! -e "$HOME/Library/Application Support/Sublime Text 3/Packages" && mkdir -p "$HOME/Library/Application Support/Sublime Text 3/Packages/User"
        target="$HOME/Library/Application Support/Sublime Text 3/Packages/User"
      else
        test ! -e "$HOME/.config/sublime-text-3/Packages" && mkdir -p "$HOME/.config/sublime-text-3/Packages/User"
        target="$HOME/.config/sublime-text-3/Packages/User"
      fi
      cp -f $source "$target/"
  fi

  if [[ -e "$p/secret/gitcfg" ]]; then
    source="$p/secret/gitcfg"
    test ! -e "$HOME/.config" && mkdir -p "$HOME/.config"
    target="$HOME/.config/gitcfg"
    if [[ -e "$target" ]]; then
      mv -f "$target" "$target.$time_stamp.bak"
    fi
    cp -rf "$source" "$target"
  fi

  mkdir -p "$HOME/.local/share/profanity/"
  source="$p/secret/profanity-data/accounts"
  target="$HOME/.local/share/profanity/accounts"
  if [[ -e "$target" ]]; then
    mv -f "$target" "$target.$time_stamp.bak"
  fi
  link_file "$source" "$target"

  for i in secret/_*
  do
    source="$p/$i"
    target="$HOME/${i/secret\/_/.}"
    link_file "$source" "$target"
  done
fi


echo "Done."
